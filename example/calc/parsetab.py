
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/NAME NUMBER SQRTstatement : NAME "=" expressionstatement : expressionexpression : \'+\' expression expression\n                  | \'-\' expression expression\n                  | \'*\' expression expression\n                  | \'/\' expression expressionexpression : SQRT expressionexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,],[2,12,12,12,12,12,-8,12,12,-9,12,12,12,-7,-3,-4,-5,-6,]),'+':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,],[4,4,4,4,4,4,-8,4,4,-9,4,4,4,-7,-3,-4,-5,-6,]),'-':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,],[5,5,5,5,5,5,-8,5,5,-9,5,5,5,-7,-3,-4,-5,-6,]),'*':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,],[6,6,6,6,6,6,-8,6,6,-9,6,6,6,-7,-3,-4,-5,-6,]),'/':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,],[7,7,7,7,7,7,-8,7,7,-9,7,7,7,-7,-3,-4,-5,-6,]),'SQRT':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,],[8,8,8,8,8,8,-8,8,8,-9,8,8,8,-7,-3,-4,-5,-6,]),'NUMBER':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,],[9,9,9,9,9,9,-8,9,9,-9,9,9,9,-7,-3,-4,-5,-6,]),'$end':([1,2,3,9,12,16,17,18,19,20,21,],[0,-9,-2,-8,-9,-7,-1,-3,-4,-5,-6,]),'=':([2,],[10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,5,6,7,8,10,11,13,14,15,],[3,11,13,14,15,16,17,18,19,20,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','new_calc.py',59),
  ('statement -> expression','statement',1,'p_statement_expr','new_calc.py',64),
  ('expression -> + expression expression','expression',3,'p_expression_binop','new_calc.py',69),
  ('expression -> - expression expression','expression',3,'p_expression_binop','new_calc.py',70),
  ('expression -> * expression expression','expression',3,'p_expression_binop','new_calc.py',71),
  ('expression -> / expression expression','expression',3,'p_expression_binop','new_calc.py',72),
  ('expression -> SQRT expression','expression',2,'p_expression_sqrt','new_calc.py',94),
  ('expression -> NUMBER','expression',1,'p_expression_number','new_calc.py',99),
  ('expression -> NAME','expression',1,'p_expression_name','new_calc.py',104),
]
